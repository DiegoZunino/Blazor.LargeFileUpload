@page "/"
@inject FileUploadService FileUploadService

<section>
    <div class="raw">
        <h5>Upload in chunks</h5>
    </div>
    <div class="row">
        <div class="col-3">
            <InputFile class="form-control" disabled="@_chunksUploading" OnChange="OnChunksUploadInputChange"/>
        </div>
        @if(_chunksUploading)
        {
            <div class="col">
                <div class="spinner-border text-info" style="width: 2.5rem; height: 2.5rem;" role="status"></div>
            </div>
        }
    </div>
</section>

<section style="margin-top: 20px;">
    <div class="raw">
        <h5>Stream via JavaScript</h5>
    </div>
    <div class="row" >
        <div class="col-3">
            <InputFile class="form-control" id="@_jsStreamInputElementId" disabled="@_jsStreaming" OnChange="OnJsStreamInputChange"/>
        </div>
        @if(_jsStreaming)
        {
            <div class="col">
                <div class="spinner-border text-success" style="width: 2.5rem; height: 2.5rem;" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </div>
</section>

@code
{
    private bool _chunksUploading;
    private bool _jsStreaming;
    private readonly string _jsStreamInputElementId = "js-stream";

    async Task OnChunksUploadInputChange(InputFileChangeEventArgs args)
    {
        _chunksUploading = true;
        await FileUploadService.ChunksUpload(args.File);
        _chunksUploading = false;
    }
    
    async Task OnJsStreamInputChange(InputFileChangeEventArgs args)
    {
        _jsStreaming = true;
        await FileUploadService.JsStream(_jsStreamInputElementId);
        _jsStreaming = false;
    }
    
    
    

}